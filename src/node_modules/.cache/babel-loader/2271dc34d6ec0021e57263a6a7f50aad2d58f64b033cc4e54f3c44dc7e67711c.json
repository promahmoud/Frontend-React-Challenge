{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\proma\\\\Desktop\\\\tasks_challeng\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {\n          ...task,\n          name: newName\n        };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  const FILTER_MAP = {\n    Not_Started: () => true,\n    In_Progres: task => !task.completed,\n    Finished: task => task.completed\n  };\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XEViG1OucSQptY/dyFJYxL9pby8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","FilterButton","Todo","nanoid","jsxDEV","_jsxDEV","App","props","_s","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","completed","toggleTaskCompleted","updatedTasks","map","task","editTask","newName","editedTaskList","deleteTask","remainingTasks","FILTER_MAP","Not_Started","In_Progres","Finished","taskList","fileName","_jsxFileName","lineNumber","columnNumber","FILTER_NAMES","Object","keys","filterList","isPressed","tasksNoun","length","headingText","className","children","role","_c","$RefreshReg$"],"sources":["C:/Users/proma/Desktop/tasks_challeng/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  const FILTER_MAP = {\n    Not_Started: () => true,\n    In_Progres: (task) => !task.completed,\n    Finished: (task) => task.completed,\n  };\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}