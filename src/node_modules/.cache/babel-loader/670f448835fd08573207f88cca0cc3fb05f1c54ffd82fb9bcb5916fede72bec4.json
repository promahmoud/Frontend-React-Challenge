{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\proma\\\\Desktop\\\\tasks_challeng\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map(task => {\n    if (id === task.id) {\n      return {\n        ...task,\n        completed: !task.completed\n      };\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\nfunction addTask(name) {\n  const newTask = {\n    id: `todo-${nanoid()}`,\n    name,\n    completed: false\n  };\n  setTasks([...tasks, newTask]);\n}\nfunction deleteTask(id) {\n  const remainingTasks = tasks.filter(task => id !== task.id);\n  setTasks(remainingTasks);\n}\nfunction App(props) {\n  _s();\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = props.tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","FilterButton","Todo","nanoid","jsxDEV","_jsxDEV","toggleTaskCompleted","id","updatedTasks","tasks","map","task","completed","setTasks","addTask","name","newTask","deleteTask","remainingTasks","filter","App","props","_s","taskList","fileName","_jsxFileName","lineNumber","columnNumber","tasksNoun","length","headingText","className","children","role","_c","$RefreshReg$"],"sources":["C:/Users/proma/Desktop/tasks_challeng/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map((task) => {\n    if (id === task.id) {\n      return { ...task, completed: !task.completed };\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n\nfunction addTask(name) {\n  const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n  setTasks([...tasks, newTask]);\n}\n\n\n\nfunction deleteTask(id) {\n  const remainingTasks = tasks.filter((task) => id !== task.id);\n  setTasks(remainingTasks);\n}\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n\n\n\n\n  const taskList = props.tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}