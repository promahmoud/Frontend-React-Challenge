[{"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\index.js":"1","C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\App.js":"2","C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Header.jsx":"3","C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Todo.jsx":"4","C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Form.js":"5","C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\FilterButton.js":"6"},{"size":393,"mtime":1697537662802,"results":"7","hashOfConfig":"8"},{"size":2369,"mtime":1697535559443,"results":"9","hashOfConfig":"8"},{"size":657,"mtime":1697529803653,"results":"10","hashOfConfig":"8"},{"size":3208,"mtime":1697534875119,"results":"11","hashOfConfig":"8"},{"size":2071,"mtime":1697537426328,"results":"12","hashOfConfig":"8"},{"size":540,"mtime":1697535201771,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i8vqwv",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\index.js",[],[],"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\App.js",["34"],[],"import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  const FILTER_MAP = {\n    All: () => true,\n    Active: (task) => !task.completed,\n    Finished: (task) => task.completed,\n  };\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n",["35"],"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Header.jsx",["36"],[],"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Todo.jsx",[],[],"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\Form.js",[],[],"C:\\Users\\proma\\Desktop\\tasks_challeng\\src\\components\\FilterButton.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":89,"column":7,"nodeType":"39","endLine":92,"endColumn":40},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":8,"column":31,"nodeType":"39","endLine":8,"endColumn":60},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-new-object",["44"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-object-constructor"]